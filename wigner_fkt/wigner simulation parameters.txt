
INDEXING

### matlab
 1D index         2D index
(1) (4) (7)   (1,1) (1,2) (1,3)
(2) (5) (8)   (2,1) (2,2) (2,3)
(3) (6) (9)   (3,1) (3,2) (3,3)
[ y   ,   x ] = ndgrid(-N/2:N/2-1,-M/2:M/2-1)
1 1 1   1 2 3
2 2 2   1 2 3
3 3 3   1 2 3

### imagesc:
|--x-->
y
|  W(y,x)
v

axis xy;
^
|  W(y,x)
y
|--x-->


### C++ / CUDA
 1D index         2D index
(0) (3) (6)   (0,0) (0,1) (0,2)
(1) (4) (7)   (1,0) (1,1) (1,2)
(2) (5) (8)   (2,0) (2,1) (2,2)

yy=idx/N   xx=idx-yy*N
 0 0 0       0 1 2
 1 1 1       0 1 2
 2 2 2       0 1 2

yy+N*xx
 0 3 6
 1 4 7
 2 5 8

x=xx ; x'=yy
^
|
x' (x+x',x-x')
|
 --x-->

#equation
Wigner = int u(x+x')u*(x-x') exp(-i2pi*f*x') dx'

#symmetrie for acceleration (not used)
u(x+x')u*(x-x') = [ u(x+(-x'))u*(x-(-x')) ]*

### Matlab

x  = [1,4]
x' = [-1,2] = N/2-[4:1]+1

(3, ) (4, ) ( ,1) ( ,2)  empty
(2, ) (3,1) (4,2) ( ,3)
(1,1) (2,2) (3,3) (4,4)  x'=0
( ,2) (1,3) (2,4) (3, )
 x=1


### C++

x  = [0,3]  = xx
x' = [-1,2] = N/2-yy

(2, ) (3, ) ( ,0) ( ,1)  empty
(1, ) (2,0) (3,1) ( ,2)
(0,0) (1,1) (2,2) (3,3)  x'=0
( ,1) (0,2) (1,3) (2, )
 x=0

-----

### Wigner 2D

#equation
Wigner = int u(x+x',y+y')u*(x-x',y-y') exp(i2pi*fx*x') exp(-i2pi*fy*y') dx' dy'

#symmetrie for acceleration (not used)
u(x+x',y+y')u*(x-x',y-y') = [ u(x+(-x'),y+(-y'))u*(x-(-x'),y-(-y')) ]*

